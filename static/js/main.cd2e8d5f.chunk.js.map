{"version":3,"sources":["components/ImageGalleryItem/ImageGalleryItem.module.css","components/ImageGallery/ImageGallery.module.css","components/Button/Button.module.css","components/Searchbar/Searchbar.js","components/ImageGallery/ImageGallery.js","components/ImageGalleryItem/ImageGalleryItem.js","components/Button/Button.js","services/ImageApi.js","components/Modal/Modal.js","App.js","services/scrollToNextPage.js","index.js","components/Searchbar/Searchbar.module.css"],"names":["module","exports","Searchbar","state","searchQuery","handleQueryChange","event","setState","currentTarget","value","toLowerCase","handleSubmit","preventDefault","props","onSubmit","className","s","this","SearchForm","type","SearchFormButton","SearchFormButtonLabel","SearchFormInput","autoComplete","autoFocus","placeholder","onChange","Component","ImageGallery","children","ImageGalleryItem","images","onClick","map","id","webformatURL","largeImageURL","photoAlt","tags","ImageGalleryItemImage","src","alt","Button","ImageApi","query","page","searchParams","URLSearchParams","key","q","image_type","orientation","per_page","url","fetch","then","response","ok","json","data","hits","Promise","reject","Error","modalRoot","document","getElementById","Modal","handleKeydown","e","code","onCloseModal","handleClickOverlay","overlay","querySelector","window","addEventListener","removeEventListener","createPortal","imgSrc","imageApiServise","Status","App","status","currentPage","showModal","currentImage","handleSearchSubmit","handleNextPage","prevState","handleClickImage","target","dataset","modal","handleModalOpen","prevProps","nextImages","fetchImages","scrollTo","top","documentElement","scrollHeight","behavior","catch","error","console","message","color","height","width","visible","length","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.cd2e8d5f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGalleryItem\":\"ImageGalleryItem_ImageGalleryItem__3Mtiy\",\"ImageGalleryItemImage\":\"ImageGalleryItem_ImageGalleryItemImage__3_LEc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGallery\":\"ImageGallery_ImageGallery__1-Fqd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__2f9Uu\"};","import { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport s from './Searchbar.module.css';\n\nexport default class Searchbar extends Component {\n  state = {\n    searchQuery: '',\n  };\n\n  handleQueryChange = event => {\n    this.setState({ searchQuery: event.currentTarget.value.toLowerCase() });\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n\n    this.props.onSubmit(this.state.searchQuery);\n  };\n\n  render() {\n    return (\n      <header className={s.Searchbar} onSubmit={this.handleSubmit}>\n        <form className={s.SearchForm}>\n          <button type=\"submit\" className={s.SearchFormButton}>\n            <span className={s.SearchFormButtonLabel}>Search</span>\n          </button>\n\n          <input\n            className={s.SearchFormInput}\n            type=\"text\"\n            autoComplete=\"off\"\n            autoFocus\n            placeholder=\"Search images and photos\"\n            onChange={this.handleQueryChange}\n          />\n        </form>\n      </header>\n    );\n  }\n}\n\nSearchbar.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport s from './ImageGallery.module.css';\n\nexport default function ImageGallery({ children }) {\n  return <ul className={s.ImageGallery}>{children}</ul>;\n}\n\nImageGallery.propTypes = {\n  children: PropTypes.node,\n};\n","import PropTypes from 'prop-types';\nimport s from './ImageGalleryItem.module.css';\n\nexport default function ImageGalleryItem({ images, onClick }) {\n  return images.map(({ id, webformatURL, largeImageURL, tags: photoAlt }) => (\n    <li key={id} className={s.ImageGalleryItem}>\n      <img\n        className={s.ImageGalleryItemImage}\n        src={webformatURL}\n        alt={photoAlt}\n        data-modal={largeImageURL}\n        onClick={onClick}\n      />\n    </li>\n  ));\n}\n\nImageGalleryItem.propTypes = {\n  images: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      webformatURL: PropTypes.string.isRequired,\n      largeImageURL: PropTypes.string.isRequired,\n      tags: PropTypes.string.isRequired,\n    }).isRequired,\n  ).isRequired,\n};\n","import PropTypes from 'prop-types';\nimport s from './Button.module.css';\n\nexport default function Button({ children, onClick }) {\n  return (\n    <button className={s.Button} type=\"button\" onClick={onClick}>\n      {children}\n    </button>\n  );\n}\n\nButton.propTypes = {\n  onClick: PropTypes.func.isRequired,\n};\n","const BASE_URL = 'https://pixabay.com/api/';\n\nexport default class ImageApi {\n  fetchImages(query, page) {\n    const searchParams = new URLSearchParams({\n      key: '23521468-535c53472c6d56fb98e2bf6f2',\n      q: query,\n      image_type: 'photo',\n      orientation: 'horizontal',\n      page: page,\n      per_page: 15,\n    });\n    const url = `${BASE_URL}?${searchParams}`;\n\n    return fetch(url).then(response => {\n      if (response.ok) {\n        return response.json().then(data =>\n          data.hits.map(({ id, webformatURL, largeImageURL, tags }) => ({\n            id,\n            webformatURL,\n            largeImageURL,\n            tags,\n          })),\n        );\n      }\n\n      return Promise.reject(new Error(`No images with name ${query}`));\n    });\n  }\n}\n","import { Component } from 'react';\nimport { createPortal } from 'react-dom';\nimport PropTypes from 'prop-types';\n\nconst modalRoot = document.getElementById('root-modal');\n\nexport default class Modal extends Component {\n  componentDidMount() {\n    const overlay = document.querySelector('.Overlay');\n    window.addEventListener('keydown', this.handleKeydown);\n\n    overlay.addEventListener('click', this.handleClickOverlay);\n  }\n\n  componentWillUnmount() {\n    const overlay = document.querySelector('.Overlay');\n    window.removeEventListener('keydown', this.handleKeydown);\n\n    overlay.removeEventListener('click', this.handleClickOverlay);\n  }\n\n  handleKeydown = e => {\n    if (e.code === 'Escape') {\n      this.props.onCloseModal();\n    }\n  };\n\n  handleClickOverlay = () => {\n    this.props.onCloseModal();\n  };\n\n  render() {\n    return createPortal(\n      <div className=\"Overlay\">\n        <div className=\"Modal\">\n          <img src={this.props.imgSrc} alt=\"\" />\n        </div>\n      </div>,\n      modalRoot,\n    );\n  }\n}\n\nModal.propTypes = {\n  onCloseModal: PropTypes.func.isRequired,\n  imgSrc: PropTypes.string.isRequired,\n};\n","import { Component } from 'react';\nimport Searchbar from './components/Searchbar';\nimport ImageGallery from './components/ImageGallery/ImageGallery';\nimport ImageGalleryItem from './components/ImageGalleryItem';\nimport Button from './components/Button';\nimport ImageApi from './services/ImageApi';\nimport Loader from 'react-loader-spinner';\nimport scrollTo from './services/scrollToNextPage';\nimport Modal from './components/Modal';\n\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\n\nimport './App.css';\n\nconst imageApiServise = new ImageApi();\n\nconst Status = {\n  IDLE: 'idle',\n  PENDING: 'pending',\n  RESOLVED: 'resolved',\n  REJECTED: 'rejected',\n};\n\nclass App extends Component {\n  state = {\n    searchQuery: '',\n    images: [],\n    status: Status.IDLE,\n    currentPage: 1,\n    showModal: false,\n    currentImage: '',\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    const { searchQuery, currentPage } = this.state;\n    const prevImages = prevState.searchQuery;\n    const nextImages = searchQuery;\n\n    if (prevImages !== nextImages || prevState.currentPage !== currentPage) {\n      this.setState({ status: Status.PENDING });\n\n      imageApiServise\n        .fetchImages(nextImages, currentPage)\n        .then(images => {\n          if (currentPage > 1) {\n            this.setState(prevState => ({\n              images: [...prevState.images, ...images],\n              status: Status.RESOLVED,\n            }));\n            scrollTo();\n            return;\n          }\n          this.setState({ images, status: Status.RESOLVED });\n        })\n        .catch(error => {\n          this.setState({ status: Status.REJECTED });\n          console.error(error.message);\n        });\n    }\n  }\n\n  handleSearchSubmit = searchQuery => {\n    this.setState({ searchQuery });\n  };\n\n  handleNextPage = () => {\n    this.setState(prevState => ({ currentPage: prevState.currentPage + 1 }));\n  };\n\n  handleClickImage = e => {\n    const currentImage = e.target.dataset.modal;\n\n    this.setState({\n      currentImage,\n    });\n\n    this.handleModalOpen();\n  };\n\n  handleModalOpen = () => {\n    this.setState(({ showModal }) => ({\n      showModal: !showModal,\n    }));\n  };\n\n  render() {\n    const { images, status, currentImage } = this.state;\n    return (\n      <div className=\"App\">\n        <Searchbar onSubmit={this.handleSearchSubmit} />\n        <ImageGallery>\n          {status === 'resolved' && (\n            <ImageGalleryItem images={images} onClick={this.handleClickImage} />\n          )}\n        </ImageGallery>\n        <Loader\n          type=\"Bars\"\n          color=\"#00BFFF\"\n          height={80}\n          width={80}\n          visible={status === 'pending'}\n        />\n        {images.length > 0 && (\n          <Button onClick={this.handleNextPage}>Load more</Button>\n        )}\n        {this.state.showModal && (\n          <Modal onCloseModal={this.handleModalOpen} imgSrc={currentImage} />\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","export default function scrollToNewPage() {\n  window.scrollTo({\n    top: document.documentElement.scrollHeight,\n    behavior: 'smooth',\n  });\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Searchbar\":\"Searchbar_Searchbar__1pZ79\",\"SearchForm\":\"Searchbar_SearchForm__Wl2OV\",\"SearchFormButton\":\"Searchbar_SearchFormButton__1ePrZ\",\"SearchFormButtonLabel\":\"Searchbar_SearchFormButtonLabel__3Q8T2\",\"SearchFormInput\":\"Searchbar_SearchFormInput__1ViP1\"};"],"sourceRoot":""}